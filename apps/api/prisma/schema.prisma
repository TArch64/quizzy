generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
}

model Quiz {
  id        String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  questions QuizQuestion[]
  results   QuizResult[]
}

model QuizQuestion {
  id              String             @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  text            String             @map("question")
  correctId       String             @unique @map("correct") @db.Uuid
  quizId          String             @db.Uuid
  quiz            Quiz               @relation(fields: [quizId], references: [id], onDelete: Cascade)
  answers         QuizAnswer[]
  resultQuestions QuizResultAnswer[]
}

model QuizAnswer {
  id            String             @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  text          String
  questionId    String             @db.Uuid
  question      QuizQuestion       @relation(fields: [questionId], references: [id], onDelete: Cascade)
  resultAnswers QuizResultAnswer[]
}

model QuizResult {
  id      String             @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  quizId  String             @db.Uuid
  quiz    Quiz               @relation(fields: [quizId], references: [id], onDelete: Cascade)
  answers QuizResultAnswer[]
}

model QuizResultAnswer {
  id         String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  resultId   String       @db.Uuid
  result     QuizResult   @relation(fields: [resultId], references: [id], onDelete: Cascade)
  questionId String       @db.Uuid
  question   QuizQuestion @relation(fields: [questionId], references: [id])
  selectedId String       @db.Uuid
  selected   QuizAnswer   @relation(fields: [selectedId], references: [id])
}
